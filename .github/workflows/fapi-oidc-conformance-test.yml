# This workflow will test IS for OIDC conformance
# 

name: FAPI-OIDC-Conformance-Test

on:
  # Allows the workflow to run automatically after a release
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: 'product-is tag name'
        required: false
        default: 'v7.0.0-alpha'
      download-url:
        description: 'URL to download product-is'
        required: false
      conformance-suite-version:
        description: 'Conformance suite release tag in https://github.com/openid-certification/conformance-suite.git'
        required: false
        default: 'v5.1.1'
      resource-url:
        description: 'Resource url path'
        default: 'https://iam/resource'

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: './product-is'
      
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.18+10
    
    - name: Setup Python
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        pip3 install psutil
        pip3 install httpx
        pip3 install httplib2
        
    - name: Download IS zip
      run: |
        INPUT_URL=${{github.event.inputs.download-url}}
        INPUT_TAG=${{github.event.inputs.tag}}
        if [[ -z "${INPUT_URL}" ]] && [[ -z "${INPUT_TAG}" ]]; then
          echo "Either 'tag' or 'download-url' must be provided."
          exit 1
        fi
        if [[ -z "${INPUT_URL}" ]]; then
          owner="wso2"
          repo="product-is"
          if [[ -z "${INPUT_TAG}" ]]; then
            tag=${GITHUB_REF:10}
            tag_trimmed=${tag// }
          else
            tag=${{github.event.inputs.tag}}
            tag_trimmed=${tag// }
          fi

          artifact="wso2is-${tag_trimmed:1}.zip"
          echo "Tag=$tag"
          echo "Artifact=$artifact"
          list_asset_url="https://api.github.com/repos/${owner}/${repo}/releases/tags/${tag_trimmed}"
          asset_url=$(curl "${list_asset_url}" | jq ".assets[] | select(.name==\"${artifact}\") | .url" | sed 's/\"//g')
          curl -vLJO -H 'Accept: application/octet-stream' \
           "${asset_url}"
        else
          curl -vLJO -H 'Accept: application/octet-stream' \
           "${INPUT_URL}"
        fi

    - name: Add deployment toml configs to IS
      run: |
        PRODUCT_IS_ZIP=$(find ./ -name 'wso2is*' -type f -printf "%f\n")
        echo ">>> Unzipping Product IS: ${PRODUCT_IS_ZIP} ..."
        unzip -qq ${PRODUCT_IS_ZIP}

        PRODUCT_IS=$(find ./ -maxdepth 1 -name 'wso2is*' -type d -printf "%f\n")

        echo ">>> Adding deployment-fapi-config.toml configs to deployment.toml..."
        cp -f ./product-is/oidc-fapi-conformance-tests/config/deployment-fapi-config.toml $PRODUCT_IS/repository/conf/deployment.toml

        echo ">>> Zipping $PRODUCT_IS to $PRODUCT_IS_ZIP"
        zip -qq -r $PRODUCT_IS_ZIP $PRODUCT_IS
        rm -r $PRODUCT_IS

    - name: Clone conformance suite
      run: |
        CONFORMANCE_SUITE_VERSION=${{github.event.inputs.conformance-suite-version}}
        git clone --depth 1 --branch release-${CONFORMANCE_SUITE_VERSION} https://github.com/openid-certification/conformance-suite.git
    
    - name: Adding extra hosts to docker-compose-dev.yml and adding iam as a localhost to /etc/hosts
      run: |
        sed -i '/^    volumes.*/i \ \ \ \ extra_hosts:\n \ \ \ \ - "localhost:\$IP\"\n \ \ \ \ - "iam:\$IP\"' ./conformance-suite/docker-compose-dev.yml
        sudo -- sh -c -e "echo '127.0.1.1 iam' >> /etc/hosts"

    - name: Start FAPI resource server
      run: |
        sudo apt update
        sudo apt install nginx
        echo ">>> NGINX installed successfully !"
        sudo chmod 777 -R /etc/nginx
        echo ">>> Permission changed for /etc/nginx"
        mkdir -p /etc/nginx/ssl
        echo ">>> /etc/nginx/ssl created successfully!"
        echo "${{secrets.FAPI_RESOURCE_SERVER_KEY}}" >> /etc/nginx/ssl/serverCA.key
        echo "${{secrets.FAPI_RESOURCE_SERVER_PEM}}" >> /etc/nginx/ssl/serverCA.pem
        echo ">>> FAPI resource server keys saved successfully!"

        cd product-is/oidc-fapi-conformance-tests/resource-server 
        cp -f nginx-proxy /etc/nginx/sites-enabled
        sudo nginx -t
        sudo service nginx restart
        echo ">>> NGINX reverse proxy server started successfully!"
        
        pip install virtualenv
        python3 -m virtualenv venv
        source ./venv/bin/activate
        pip install -r requirements.txt
        echo ">>> FAPI resource server starting..."
        . ./venv/bin/activate
        nohup python3 resource-server.py > resource-server.log &
        sleep 5
        cat resource-server.log

    - name: Run IS
      run: |
        PRODUCT_IS_ZIP=$(find ./ -name wso2is* -type f -printf "%f\n")
        cd ./product-is/oidc-fapi-conformance-tests
        python3 ./configure_is_fapi.py ../../$PRODUCT_IS_ZIP ${{secrets.FAPI_CLIENT1_JWKS}} ${{secrets.FAPI_CLIENT2_JWKS}} ${{secrets.FAPI_CLIENT1_MTLS}} ${{secrets.FAPI_CLIENT2_MTLS}} ${{github.event.inputs.resource-url}}
        
    - name: Run Conformance Suite
      run: |
        DOCKER_COMPOSE_FILE=./docker-compose-dev.yml
        cd conformance-suite
        IP=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
        export IP
        echo "Host ip: " 
        printenv IP
        mvn clean package
        python3 ../product-is/oidc-conformance-tests/start_conformance_suite.py $DOCKER_COMPOSE_FILE
        
    - name: Run Tests
      run: bash ./product-is/oidc-conformance-tests/fapi/test_runner_fapi.sh
      
    - name: Test Results
      run: |
        IS_SUCCESSFUL=false
        if python3 ./product-is/oidc-conformance-tests/export_results.py https://localhost:8443
        then
          IS_SUCCESSFUL=true
        fi
        if $IS_SUCCESSFUL
        then
          echo "======================"
          echo "All Test Cases Passed!"
          echo "======================"
          exit 0
        else      
          echo "============================================="
          echo "Failed Test Cases Found. Exiting with Failure"
          echo "============================================="
          exit 1
        fi
      
    - name: Archive test results
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-results
        path: ./*test_results.zip
        
    - name: Archive test logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-logs
        path: ./*log.txt
       
   
    

